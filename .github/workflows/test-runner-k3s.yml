name: Test Self-Hosted Runner (K3s Compatible)

on:
  push:
    branches: [ feature/integrate-sidebar-layout ]
  workflow_dispatch:

jobs:
  test-runner:
    name: Test K3s Runner Connection
    runs-on: self-hosted
    
    steps:
    - name: Check runner info
      run: |
        echo "Runner name: ${{ runner.name }}"
        echo "Runner OS: ${{ runner.os }}"
        echo "Runner arch: ${{ runner.arch }}"
        echo "Working directory: $(pwd)"
        echo "Available tools:"
        
    - name: Check Container Runtime
      run: |
        echo "=== Container Runtime Check ==="
        
        # Check for containerd (K3s default)
        if command -v ctr >/dev/null 2>&1; then
          echo "✅ containerd found: $(ctr version | head -n 1)"
        else
          echo "❌ containerd (ctr) not found"
        fi
        
        # Check for nerdctl (Docker-compatible CLI)
        if command -v nerdctl >/dev/null 2>&1; then
          echo "✅ nerdctl found: $(nerdctl version | head -n 1)"
        else
          echo "⚠️ nerdctl not found - will install if needed"
        fi
        
        # Check for Docker (legacy)
        if command -v docker >/dev/null 2>&1; then
          echo "ℹ️ Docker found: $(docker --version)"
          if docker ps >/dev/null 2>&1; then
            echo "✅ Docker daemon accessible"
          else
            echo "❌ Docker daemon not accessible (expected on K3s)"
          fi
        else
          echo "ℹ️ Docker not found (expected on K3s)"
        fi
        
    - name: Check Kubernetes
      run: |
        echo "=== Kubernetes Check ==="
        
        if command -v kubectl >/dev/null 2>&1; then
          echo "✅ kubectl found: $(kubectl version --client --short)"
          
          if kubectl cluster-info >/dev/null 2>&1; then
            echo "✅ K3s cluster accessible"
            kubectl get nodes
            kubectl get namespaces
          else
            echo "❌ K3s cluster not accessible"
          fi
        else
          echo "❌ kubectl not found"
        fi
        
    - name: Check Other Tools  
      run: |
        echo "=== Other Tools Check ==="
        node --version || echo "❌ Node not found"
        python3 --version || echo "❌ Python not found"
        
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: List files
      run: |
        echo "Repository contents:"
        ls -la
        
    - name: Test nerdctl Installation & Usage
      run: |
        # Install nerdctl if not present
        if ! command -v nerdctl >/dev/null 2>&1; then
          echo "Installing nerdctl..."
          curl -Lo nerdctl.tar.gz https://github.com/containerd/nerdctl/releases/latest/download/nerdctl-full-1.7.1-linux-amd64.tar.gz
          sudo tar -xzf nerdctl.tar.gz -C /usr/local/
          rm nerdctl.tar.gz
        fi
        
        # Set containerd namespace for K3s
        export CONTAINERD_NAMESPACE=k8s.io
        
        # Test nerdctl commands
        echo "Testing nerdctl..."
        nerdctl version
        nerdctl info || echo "nerdctl info failed - may need containerd access"
        nerdctl images || echo "nerdctl images failed - may need containerd access"
        
    - name: Test Kubernetes Deployment
      run: |
        if command -v kubectl >/dev/null 2>&1 && kubectl cluster-info >/dev/null 2>&1; then
          echo "Testing Kubernetes deployment..."
          
          # Create test namespace
          kubectl create namespace test-runner --dry-run=client -o yaml | kubectl apply -f -
          
          # Deploy nginx test pod
          cat << EOF | kubectl apply -f -
          apiVersion: v1
          kind: Pod
          metadata:
            name: test-nginx
            namespace: test-runner
          spec:
            containers:
            - name: nginx
              image: nginx:alpine
              ports:
              - containerPort: 80
          EOF
          
          # Wait and test
          kubectl wait --for=condition=ready pod/test-nginx -n test-runner --timeout=60s
          kubectl get pod test-nginx -n test-runner
          
          # Cleanup
          kubectl delete namespace test-runner --wait=true
          
          echo "✅ Kubernetes deployment test successful!"
        else
          echo "⚠️ Skipping Kubernetes test - cluster not accessible"
        fi
    
    - name: Success message
      run: |
        echo "================================="
        echo "✅ K3s self-hosted runner working!"
        echo "================================="
        echo ""
        echo "Capabilities detected:"
        command -v ctr >/dev/null 2>&1 && echo "✅ containerd (ctr)"
        command -v nerdctl >/dev/null 2>&1 && echo "✅ nerdctl (Docker-compatible)"
        command -v kubectl >/dev/null 2>&1 && echo "✅ kubectl (Kubernetes)"
        kubectl cluster-info >/dev/null 2>&1 && echo "✅ K3s cluster access"
        echo ""
        echo "Ready for K3s-based CI/CD workflows!"