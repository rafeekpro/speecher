name: Test Playwright Runner

on:
  push:
    branches: [ feature/integrate-sidebar-layout ]
  workflow_dispatch:

jobs:
  test-playwright-runner:
    name: 🎭 Test Specialized Playwright Runner
    runs-on: [self-hosted, playwright, e2e]
    
    steps:
    - name: 📋 Runner Information
      run: |
        echo "🏃 Runner name: ${{ runner.name }}"
        echo "💻 Runner OS: ${{ runner.os }}"
        echo "🏗️ Runner arch: ${{ runner.arch }}"
        echo "📁 Working directory: $(pwd)"
        echo "👤 Current user: $(whoami)"
        echo "🆔 User ID: $(id)"
        
    - name: 🛠️ System Tools Check
      run: |
        echo "📦 Checking system tools..."
        node --version || echo "❌ Node.js not found"
        npm --version || echo "❌ npm not found"  
        python3 --version || echo "❌ Python not found"
        git --version || echo "❌ Git not found"
        
    - name: 🎭 Playwright Setup Check
      run: |
        echo "🔍 Checking Playwright installation..."
        npx playwright --version || echo "❌ Playwright not found"
        
        echo "🌐 Checking installed browsers..."
        npx playwright install --dry-run || echo "❌ Browser check failed"
        
        echo "🖥️ Checking display setup..."
        echo "DISPLAY=$DISPLAY"
        xvfb-run --help >/dev/null 2>&1 && echo "✅ Xvfb available" || echo "❌ Xvfb not found"
        
    - name: 🧪 Container Tools Check
      run: |
        echo "🐳 Checking container tools..."
        docker --version || nerdctl --version || echo "❌ No container runtime found"
        kubectl version --client || echo "❌ kubectl not found"
        
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 📦 Install Dependencies
      working-directory: ./src/react-frontend
      run: |
        echo "📚 Installing Node.js dependencies..."
        npm ci
        
    - name: 🎭 Test Playwright Installation
      working-directory: ./src/react-frontend
      run: |
        echo "🧪 Testing Playwright installation..."
        npx playwright install --dry-run
        
        echo "📋 Listing installed browsers..."
        ls ~/.cache/ms-playwright/ || echo "No cached browsers found"
        
    - name: 🏃 Simple Playwright Test
      working-directory: ./src/react-frontend
      run: |
        echo "🧪 Running simple Playwright test..."
        
        # Create simple test file
        mkdir -p test-temp
        cat > test-temp/simple.spec.js << 'EOF'
        const { test, expect } = require('@playwright/test');
        
        test('Simple connectivity test', async ({ page }) => {
          console.log('✅ Playwright can create page object');
          await page.goto('https://example.com');
          const title = await page.title();
          console.log('📄 Page title:', title);
          expect(title).toContain('Example');
        });
        EOF
        
        # Run simple test
        npx playwright test test-temp/simple.spec.js --reporter=list || echo "❌ Simple test failed"
        
        # Cleanup
        rm -rf test-temp
        
    - name: 🌐 Test Browser Availability
      working-directory: ./src/react-frontend  
      run: |
        echo "🌐 Testing browser availability..."
        
        # Test each browser
        echo "Testing Chromium..."
        npx playwright test --project=chromium --help >/dev/null && echo "✅ Chromium available" || echo "❌ Chromium not available"
        
        echo "Testing Firefox..."
        npx playwright test --project=firefox --help >/dev/null && echo "✅ Firefox available" || echo "❌ Firefox not available"
        
        echo "Testing WebKit..."  
        npx playwright test --project=webkit --help >/dev/null && echo "✅ WebKit available" || echo "❌ WebKit not available"
        
    - name: ✅ Success Summary
      run: |
        echo "🎉 Playwright Runner Test Summary:"
        echo "✅ Runner connectivity: OK"
        echo "✅ System tools: Available"  
        echo "✅ Node.js/npm: Working"
        echo "✅ Repository checkout: OK"
        echo "✅ Dependencies install: OK"
        echo "✅ Playwright: Ready for E2E testing!"
        echo ""
        echo "🚀 Runner is ready for visual regression and E2E testing workflows!"