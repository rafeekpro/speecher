# Kubernetes manifests for CI/CD on K3s
apiVersion: v1
kind: Namespace
metadata:
  name: speecher-ci
  labels:
    purpose: ci-cd
    environment: testing
---
apiVersion: v1
kind: Namespace  
metadata:
  name: speecher-prod
  labels:
    purpose: production
    environment: prod
---
# MongoDB for CI testing
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-ci
  namespace: speecher-ci
  labels:
    app: mongodb
    environment: ci
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:6.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: admin
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: speecher_admin_pass
        - name: MONGO_INITDB_DATABASE
          value: speecher_test
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi" 
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: speecher-ci
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongodb
---
# ConfigMap for CI environment
apiVersion: v1
kind: ConfigMap
metadata:
  name: ci-config
  namespace: speecher-ci
data:
  MONGODB_URI: "mongodb://mongodb:27017/speecher_test"
  ENVIRONMENT: "ci"
  PYTHONUNBUFFERED: "1"
---
# Secret for CI (example - use external secret management in production)
apiVersion: v1
kind: Secret
metadata:
  name: ci-secrets
  namespace: speecher-ci
type: Opaque
data:
  # Base64 encoded values - use proper secret management
  mongodb-password: c3BlZWNoZXJfYWRtaW5fcGFzcw== # speecher_admin_pass
---
# ServiceAccount for CI pods
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ci-runner
  namespace: speecher-ci
---
# Role for CI operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ci-runner
  namespace: speecher-ci
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ci-runner
  namespace: speecher-ci
subjects:
- kind: ServiceAccount
  name: ci-runner
  namespace: speecher-ci
roleRef:
  kind: Role
  name: ci-runner
  apiGroup: rbac.authorization.k8s.io