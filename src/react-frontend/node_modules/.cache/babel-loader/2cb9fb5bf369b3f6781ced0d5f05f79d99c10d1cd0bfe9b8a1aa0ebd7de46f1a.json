{"ast":null,"code":"var _jsxFileName = \"/Users/rla/Projects/Speecher/src/react-frontend/src/components/APIKeysSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, TextField, Button, Grid, Alert, Snackbar, IconButton, InputAdornment, Switch, FormControlLabel, Chip, Divider, List, ListItem, ListItemText, ListItemIcon, ListItemSecondaryAction, Collapse, Paper } from '@mui/material';\nimport { Save as SaveIcon, Visibility as VisibilityIcon, VisibilityOff as VisibilityOffIcon, Delete as DeleteIcon, Edit as EditIcon, ExpandMore as ExpandMoreIcon, ExpandLess as ExpandLessIcon, CloudQueue as CloudIcon, CheckCircle as CheckIcon, Warning as WarningIcon, VpnKey as KeyIcon } from '@mui/icons-material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst APIKeysSettings = () => {\n  _s();\n  const [providers, setProviders] = useState([]);\n  const [expandedProvider, setExpandedProvider] = useState(null);\n  const [showPassword, setShowPassword] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [apiKeys, setApiKeys] = useState({\n    aws: {\n      access_key_id: '',\n      secret_access_key: '',\n      region: 'us-east-1',\n      s3_bucket_name: ''\n    },\n    azure: {\n      subscription_key: '',\n      region: 'eastus',\n      endpoint: ''\n    },\n    gcp: {\n      credentials_json: '',\n      project_id: '',\n      gcs_bucket_name: ''\n    }\n  });\n  useEffect(() => {\n    loadProviders();\n  }, []);\n  const loadProviders = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/keys`);\n      setProviders(response.data);\n\n      // Load keys for each configured provider\n      for (const provider of response.data) {\n        if (provider.configured) {\n          loadProviderKeys(provider.provider);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading providers:', error);\n    }\n  };\n  const loadProviderKeys = async provider => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/keys/${provider}`);\n      if (response.data.configured) {\n        setApiKeys(prev => ({\n          ...prev,\n          [provider]: response.data.keys\n        }));\n      }\n    } catch (error) {\n      console.error(`Error loading ${provider} keys:`, error);\n    }\n  };\n  const handleSaveKeys = async provider => {\n    setLoading(true);\n    try {\n      await axios.post(`${API_BASE_URL}/api/keys/${provider}`, {\n        provider,\n        keys: apiKeys[provider]\n      });\n      setMessage({\n        type: 'success',\n        text: `${provider.toUpperCase()} API keys saved successfully!`\n      });\n      loadProviders();\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: `Failed to save ${provider} keys: ${error.message}`\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteKeys = async provider => {\n    if (!window.confirm(`Are you sure you want to delete ${provider.toUpperCase()} API keys?`)) {\n      return;\n    }\n    setLoading(true);\n    try {\n      await axios.delete(`${API_BASE_URL}/api/keys/${provider}`);\n      setApiKeys(prev => ({\n        ...prev,\n        [provider]: provider === 'aws' ? {\n          access_key_id: '',\n          secret_access_key: '',\n          region: 'us-east-1',\n          s3_bucket_name: ''\n        } : provider === 'azure' ? {\n          subscription_key: '',\n          region: 'eastus',\n          endpoint: ''\n        } : {\n          credentials_json: '',\n          project_id: '',\n          gcs_bucket_name: ''\n        }\n      }));\n      setMessage({\n        type: 'success',\n        text: `${provider.toUpperCase()} API keys deleted!`\n      });\n      loadProviders();\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: `Failed to delete ${provider} keys: ${error.message}`\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleToggleProvider = async (provider, enabled) => {\n    try {\n      await axios.put(`${API_BASE_URL}/api/keys/${provider}/toggle?enabled=${enabled}`);\n      loadProviders();\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: `Failed to toggle ${provider}: ${error.message}`\n      });\n    }\n  };\n  const togglePasswordVisibility = field => {\n    setShowPassword(prev => ({\n      ...prev,\n      [field]: !prev[field]\n    }));\n  };\n  const handleInputChange = (provider, field, value) => {\n    setApiKeys(prev => ({\n      ...prev,\n      [provider]: {\n        ...prev[provider],\n        [field]: value\n      }\n    }));\n  };\n  const getProviderIcon = provider => {\n    var _providers$find, _providers$find2;\n    const isConfigured = (_providers$find = providers.find(p => p.provider === provider)) === null || _providers$find === void 0 ? void 0 : _providers$find.configured;\n    const isEnabled = (_providers$find2 = providers.find(p => p.provider === provider)) === null || _providers$find2 === void 0 ? void 0 : _providers$find2.enabled;\n    if (isConfigured && isEnabled) {\n      return /*#__PURE__*/_jsxDEV(CheckIcon, {\n        color: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 14\n      }, this);\n    } else if (isConfigured) {\n      return /*#__PURE__*/_jsxDEV(WarningIcon, {\n        color: \"warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(CloudIcon, {\n      color: \"disabled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  };\n  const getProviderColor = provider => {\n    switch (provider) {\n      case 'aws':\n        return '#FF9900';\n      case 'azure':\n        return '#0078D4';\n      case 'gcp':\n        return '#4285F4';\n      default:\n        return '#666';\n    }\n  };\n  const renderProviderForm = provider => {\n    switch (provider) {\n      case 'aws':\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"AWS Access Key ID\",\n              value: apiKeys.aws.access_key_id,\n              onChange: e => handleInputChange('aws', 'access_key_id', e.target.value),\n              variant: \"outlined\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(KeyIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 68\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 35\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"AWS Secret Access Key\",\n              type: showPassword.aws_secret ? 'text' : 'password',\n              value: apiKeys.aws.secret_access_key,\n              onChange: e => handleInputChange('aws', 'secret_access_key', e.target.value),\n              variant: \"outlined\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(KeyIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 68\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 35\n                }, this),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => togglePasswordVisibility('aws_secret'),\n                    children: showPassword.aws_secret ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 52\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 76\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"AWS Region\",\n              value: apiKeys.aws.region,\n              onChange: e => handleInputChange('aws', 'region', e.target.value),\n              variant: \"outlined\",\n              placeholder: \"us-east-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"S3 Bucket Name\",\n              value: apiKeys.aws.s3_bucket_name,\n              onChange: e => handleInputChange('aws', 's3_bucket_name', e.target.value),\n              variant: \"outlined\",\n              placeholder: \"my-transcription-bucket\",\n              helperText: \"Unique S3 bucket name for storing audio files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this);\n      case 'azure':\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Azure Subscription Key\",\n              type: showPassword.azure_key ? 'text' : 'password',\n              value: apiKeys.azure.subscription_key,\n              onChange: e => handleInputChange('azure', 'subscription_key', e.target.value),\n              variant: \"outlined\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(KeyIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 68\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 35\n                }, this),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => togglePasswordVisibility('azure_key'),\n                    children: showPassword.azure_key ? /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 51\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 75\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Azure Region\",\n              value: apiKeys.azure.region,\n              onChange: e => handleInputChange('azure', 'region', e.target.value),\n              variant: \"outlined\",\n              placeholder: \"eastus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Azure Endpoint (Optional)\",\n              value: apiKeys.azure.endpoint,\n              onChange: e => handleInputChange('azure', 'endpoint', e.target.value),\n              variant: \"outlined\",\n              placeholder: \"https://eastus.api.cognitive.microsoft.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this);\n      case 'gcp':\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"GCP Service Account JSON\",\n              multiline: true,\n              rows: 4,\n              value: apiKeys.gcp.credentials_json,\n              onChange: e => handleInputChange('gcp', 'credentials_json', e.target.value),\n              variant: \"outlined\",\n              placeholder: \"{\\\"type\\\": \\\"service_account\\\", \\\"project_id\\\": \\\"...\\\", ...}\",\n              InputProps: {\n                style: {\n                  fontFamily: 'monospace',\n                  fontSize: '0.9rem'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"GCP Project ID\",\n              value: apiKeys.gcp.project_id,\n              onChange: e => handleInputChange('gcp', 'project_id', e.target.value),\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"GCS Bucket Name\",\n              value: apiKeys.gcp.gcs_bucket_name,\n              onChange: e => handleInputChange('gcp', 'gcs_bucket_name', e.target.value),\n              variant: \"outlined\",\n              placeholder: \"my-gcp-transcription-bucket\",\n              helperText: \"Google Cloud Storage bucket name for storing audio files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        mb: 3\n      },\n      children: \"API Keys Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mb: 3\n      },\n      children: \"Your API keys are encrypted and stored securely in the database. They are never exposed in logs or responses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: ['aws', 'azure', 'gcp'].map(provider => {\n        const providerInfo = providers.find(p => p.provider === provider) || {};\n        const isExpanded = expandedProvider === provider;\n        return /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: getProviderIcon(provider)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: getProviderColor(provider)\n                  },\n                  children: provider.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 23\n                }, this), providerInfo.configured && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: providerInfo.enabled ? \"Active\" : \"Disabled\",\n                  size: \"small\",\n                  color: providerInfo.enabled ? \"success\" : \"default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this),\n              secondary: providerInfo.configured ? `Last updated: ${new Date(providerInfo.updated_at).toLocaleDateString()}` : 'Not configured'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setExpandedProvider(isExpanded ? null : provider),\n                edge: \"end\",\n                children: isExpanded ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 35\n                }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isExpanded,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 3,\n                pt: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 3\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this), renderProviderForm(provider), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 3,\n                  display: 'flex',\n                  gap: 2,\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 34\n                  }, this),\n                  onClick: () => handleSaveKeys(provider),\n                  disabled: loading,\n                  sx: {\n                    backgroundColor: getProviderColor(provider),\n                    '&:hover': {\n                      opacity: 0.8\n                    }\n                  },\n                  children: \"Save Keys\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 21\n                }, this), providerInfo.configured && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"error\",\n                    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 38\n                    }, this),\n                    onClick: () => handleDeleteKeys(provider),\n                    disabled: loading,\n                    children: \"Delete Keys\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: providerInfo.enabled,\n                      onChange: e => handleToggleProvider(provider, e.target.checked),\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 29\n                    }, this),\n                    label: \"Enabled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, provider, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!message,\n      autoHideDuration: 6000,\n      onClose: () => setMessage(null),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: message && /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setMessage(null),\n        severity: message.type,\n        sx: {\n          width: '100%'\n        },\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n};\n_s(APIKeysSettings, \"LKxmP5sdM244qhP5gBap4ZE7bck=\");\n_c = APIKeysSettings;\nexport default APIKeysSettings;\nvar _c;\n$RefreshReg$(_c, \"APIKeysSettings\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","TextField","Button","Grid","Alert","Snackbar","IconButton","InputAdornment","Switch","FormControlLabel","Chip","Divider","List","ListItem","ListItemText","ListItemIcon","ListItemSecondaryAction","Collapse","Paper","Save","SaveIcon","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","Delete","DeleteIcon","Edit","EditIcon","ExpandMore","ExpandMoreIcon","ExpandLess","ExpandLessIcon","CloudQueue","CloudIcon","CheckCircle","CheckIcon","Warning","WarningIcon","VpnKey","KeyIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_URL","APIKeysSettings","_s","providers","setProviders","expandedProvider","setExpandedProvider","showPassword","setShowPassword","loading","setLoading","message","setMessage","apiKeys","setApiKeys","aws","access_key_id","secret_access_key","region","s3_bucket_name","azure","subscription_key","endpoint","gcp","credentials_json","project_id","gcs_bucket_name","loadProviders","response","get","data","provider","configured","loadProviderKeys","error","console","prev","keys","handleSaveKeys","post","type","text","toUpperCase","handleDeleteKeys","window","confirm","delete","handleToggleProvider","enabled","put","togglePasswordVisibility","field","handleInputChange","value","getProviderIcon","_providers$find","_providers$find2","isConfigured","find","p","isEnabled","color","fileName","_jsxFileName","lineNumber","columnNumber","getProviderColor","renderProviderForm","container","spacing","children","item","xs","fullWidth","label","onChange","e","target","variant","InputProps","startAdornment","position","aws_secret","endAdornment","onClick","placeholder","helperText","azure_key","multiline","rows","style","fontFamily","fontSize","gutterBottom","sx","mb","severity","map","providerInfo","isExpanded","elevation","primary","display","alignItems","gap","size","secondary","Date","updated_at","toLocaleDateString","edge","in","pt","mt","startIcon","disabled","backgroundColor","opacity","control","checked","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["/Users/rla/Projects/Speecher/src/react-frontend/src/components/APIKeysSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Alert,\n  Snackbar,\n  IconButton,\n  InputAdornment,\n  Switch,\n  FormControlLabel,\n  Chip,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  Collapse,\n  Paper\n} from '@mui/material';\nimport {\n  Save as SaveIcon,\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  ExpandMore as ExpandMoreIcon,\n  ExpandLess as ExpandLessIcon,\n  CloudQueue as CloudIcon,\n  CheckCircle as CheckIcon,\n  Warning as WarningIcon,\n  VpnKey as KeyIcon\n} from '@mui/icons-material';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nconst APIKeysSettings = () => {\n  const [providers, setProviders] = useState([]);\n  const [expandedProvider, setExpandedProvider] = useState(null);\n  const [showPassword, setShowPassword] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [apiKeys, setApiKeys] = useState({\n    aws: {\n      access_key_id: '',\n      secret_access_key: '',\n      region: 'us-east-1',\n      s3_bucket_name: ''\n    },\n    azure: {\n      subscription_key: '',\n      region: 'eastus',\n      endpoint: ''\n    },\n    gcp: {\n      credentials_json: '',\n      project_id: '',\n      gcs_bucket_name: ''\n    }\n  });\n\n  useEffect(() => {\n    loadProviders();\n  }, []);\n\n  const loadProviders = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/keys`);\n      setProviders(response.data);\n      \n      // Load keys for each configured provider\n      for (const provider of response.data) {\n        if (provider.configured) {\n          loadProviderKeys(provider.provider);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading providers:', error);\n    }\n  };\n\n  const loadProviderKeys = async (provider) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/keys/${provider}`);\n      if (response.data.configured) {\n        setApiKeys(prev => ({\n          ...prev,\n          [provider]: response.data.keys\n        }));\n      }\n    } catch (error) {\n      console.error(`Error loading ${provider} keys:`, error);\n    }\n  };\n\n  const handleSaveKeys = async (provider) => {\n    setLoading(true);\n    try {\n      await axios.post(`${API_BASE_URL}/api/keys/${provider}`, {\n        provider,\n        keys: apiKeys[provider]\n      });\n      \n      setMessage({ type: 'success', text: `${provider.toUpperCase()} API keys saved successfully!` });\n      loadProviders();\n    } catch (error) {\n      setMessage({ type: 'error', text: `Failed to save ${provider} keys: ${error.message}` });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteKeys = async (provider) => {\n    if (!window.confirm(`Are you sure you want to delete ${provider.toUpperCase()} API keys?`)) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await axios.delete(`${API_BASE_URL}/api/keys/${provider}`);\n      setApiKeys(prev => ({\n        ...prev,\n        [provider]: provider === 'aws' \n          ? { access_key_id: '', secret_access_key: '', region: 'us-east-1', s3_bucket_name: '' }\n          : provider === 'azure'\n          ? { subscription_key: '', region: 'eastus', endpoint: '' }\n          : { credentials_json: '', project_id: '', gcs_bucket_name: '' }\n      }));\n      setMessage({ type: 'success', text: `${provider.toUpperCase()} API keys deleted!` });\n      loadProviders();\n    } catch (error) {\n      setMessage({ type: 'error', text: `Failed to delete ${provider} keys: ${error.message}` });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleToggleProvider = async (provider, enabled) => {\n    try {\n      await axios.put(`${API_BASE_URL}/api/keys/${provider}/toggle?enabled=${enabled}`);\n      loadProviders();\n    } catch (error) {\n      setMessage({ type: 'error', text: `Failed to toggle ${provider}: ${error.message}` });\n    }\n  };\n\n  const togglePasswordVisibility = (field) => {\n    setShowPassword(prev => ({ ...prev, [field]: !prev[field] }));\n  };\n\n  const handleInputChange = (provider, field, value) => {\n    setApiKeys(prev => ({\n      ...prev,\n      [provider]: {\n        ...prev[provider],\n        [field]: value\n      }\n    }));\n  };\n\n  const getProviderIcon = (provider) => {\n    const isConfigured = providers.find(p => p.provider === provider)?.configured;\n    const isEnabled = providers.find(p => p.provider === provider)?.enabled;\n    \n    if (isConfigured && isEnabled) {\n      return <CheckIcon color=\"success\" />;\n    } else if (isConfigured) {\n      return <WarningIcon color=\"warning\" />;\n    }\n    return <CloudIcon color=\"disabled\" />;\n  };\n\n  const getProviderColor = (provider) => {\n    switch (provider) {\n      case 'aws': return '#FF9900';\n      case 'azure': return '#0078D4';\n      case 'gcp': return '#4285F4';\n      default: return '#666';\n    }\n  };\n\n  const renderProviderForm = (provider) => {\n    switch (provider) {\n      case 'aws':\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"AWS Access Key ID\"\n                value={apiKeys.aws.access_key_id}\n                onChange={(e) => handleInputChange('aws', 'access_key_id', e.target.value)}\n                variant=\"outlined\"\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\"><KeyIcon /></InputAdornment>,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"AWS Secret Access Key\"\n                type={showPassword.aws_secret ? 'text' : 'password'}\n                value={apiKeys.aws.secret_access_key}\n                onChange={(e) => handleInputChange('aws', 'secret_access_key', e.target.value)}\n                variant=\"outlined\"\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\"><KeyIcon /></InputAdornment>,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton onClick={() => togglePasswordVisibility('aws_secret')}>\n                        {showPassword.aws_secret ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"AWS Region\"\n                value={apiKeys.aws.region}\n                onChange={(e) => handleInputChange('aws', 'region', e.target.value)}\n                variant=\"outlined\"\n                placeholder=\"us-east-1\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"S3 Bucket Name\"\n                value={apiKeys.aws.s3_bucket_name}\n                onChange={(e) => handleInputChange('aws', 's3_bucket_name', e.target.value)}\n                variant=\"outlined\"\n                placeholder=\"my-transcription-bucket\"\n                helperText=\"Unique S3 bucket name for storing audio files\"\n              />\n            </Grid>\n          </Grid>\n        );\n\n      case 'azure':\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Azure Subscription Key\"\n                type={showPassword.azure_key ? 'text' : 'password'}\n                value={apiKeys.azure.subscription_key}\n                onChange={(e) => handleInputChange('azure', 'subscription_key', e.target.value)}\n                variant=\"outlined\"\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\"><KeyIcon /></InputAdornment>,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton onClick={() => togglePasswordVisibility('azure_key')}>\n                        {showPassword.azure_key ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Azure Region\"\n                value={apiKeys.azure.region}\n                onChange={(e) => handleInputChange('azure', 'region', e.target.value)}\n                variant=\"outlined\"\n                placeholder=\"eastus\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Azure Endpoint (Optional)\"\n                value={apiKeys.azure.endpoint}\n                onChange={(e) => handleInputChange('azure', 'endpoint', e.target.value)}\n                variant=\"outlined\"\n                placeholder=\"https://eastus.api.cognitive.microsoft.com\"\n              />\n            </Grid>\n          </Grid>\n        );\n\n      case 'gcp':\n        return (\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"GCP Service Account JSON\"\n                multiline\n                rows={4}\n                value={apiKeys.gcp.credentials_json}\n                onChange={(e) => handleInputChange('gcp', 'credentials_json', e.target.value)}\n                variant=\"outlined\"\n                placeholder='{\"type\": \"service_account\", \"project_id\": \"...\", ...}'\n                InputProps={{\n                  style: { fontFamily: 'monospace', fontSize: '0.9rem' }\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"GCP Project ID\"\n                value={apiKeys.gcp.project_id}\n                onChange={(e) => handleInputChange('gcp', 'project_id', e.target.value)}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"GCS Bucket Name\"\n                value={apiKeys.gcp.gcs_bucket_name}\n                onChange={(e) => handleInputChange('gcp', 'gcs_bucket_name', e.target.value)}\n                variant=\"outlined\"\n                placeholder=\"my-gcp-transcription-bucket\"\n                helperText=\"Google Cloud Storage bucket name for storing audio files\"\n              />\n            </Grid>\n          </Grid>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h5\" gutterBottom sx={{ mb: 3 }}>\n        API Keys Management\n      </Typography>\n      \n      <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Your API keys are encrypted and stored securely in the database. They are never exposed in logs or responses.\n      </Alert>\n\n      <List>\n        {['aws', 'azure', 'gcp'].map((provider) => {\n          const providerInfo = providers.find(p => p.provider === provider) || {};\n          const isExpanded = expandedProvider === provider;\n          \n          return (\n            <Paper key={provider} elevation={2} sx={{ mb: 2 }}>\n              <ListItem>\n                <ListItemIcon>\n                  {getProviderIcon(provider)}\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <Typography variant=\"h6\" sx={{ color: getProviderColor(provider) }}>\n                        {provider.toUpperCase()}\n                      </Typography>\n                      {providerInfo.configured && (\n                        <Chip \n                          label={providerInfo.enabled ? \"Active\" : \"Disabled\"} \n                          size=\"small\"\n                          color={providerInfo.enabled ? \"success\" : \"default\"}\n                        />\n                      )}\n                    </Box>\n                  }\n                  secondary={\n                    providerInfo.configured \n                      ? `Last updated: ${new Date(providerInfo.updated_at).toLocaleDateString()}`\n                      : 'Not configured'\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton \n                    onClick={() => setExpandedProvider(isExpanded ? null : provider)}\n                    edge=\"end\"\n                  >\n                    {isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n              \n              <Collapse in={isExpanded}>\n                <Box sx={{ p: 3, pt: 0 }}>\n                  <Divider sx={{ mb: 3 }} />\n                  \n                  {renderProviderForm(provider)}\n                  \n                  <Box sx={{ mt: 3, display: 'flex', gap: 2, alignItems: 'center' }}>\n                    <Button\n                      variant=\"contained\"\n                      startIcon={<SaveIcon />}\n                      onClick={() => handleSaveKeys(provider)}\n                      disabled={loading}\n                      sx={{\n                        backgroundColor: getProviderColor(provider),\n                        '&:hover': {\n                          opacity: 0.8,\n                        }\n                      }}\n                    >\n                      Save Keys\n                    </Button>\n                    \n                    {providerInfo.configured && (\n                      <>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"error\"\n                          startIcon={<DeleteIcon />}\n                          onClick={() => handleDeleteKeys(provider)}\n                          disabled={loading}\n                        >\n                          Delete Keys\n                        </Button>\n                        \n                        <FormControlLabel\n                          control={\n                            <Switch\n                              checked={providerInfo.enabled}\n                              onChange={(e) => handleToggleProvider(provider, e.target.checked)}\n                              color=\"primary\"\n                            />\n                          }\n                          label=\"Enabled\"\n                        />\n                      </>\n                    )}\n                  </Box>\n                </Box>\n              </Collapse>\n            </Paper>\n          );\n        })}\n      </List>\n\n      <Snackbar\n        open={!!message}\n        autoHideDuration={6000}\n        onClose={() => setMessage(null)}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        {message && (\n          <Alert \n            onClose={() => setMessage(null)} \n            severity={message.type} \n            sx={{ width: '100%' }}\n          >\n            {message.text}\n          </Alert>\n        )}\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default APIKeysSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}