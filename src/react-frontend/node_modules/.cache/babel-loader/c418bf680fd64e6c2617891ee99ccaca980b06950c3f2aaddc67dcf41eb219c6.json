{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const transcribeAudio = async formData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/transcribe`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      timeout: 60000 // 60 second timeout\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.detail || 'Server error');\n    } else if (error.request) {\n      throw new Error('No response from server. Please check if the backend is running.');\n    } else {\n      throw new Error('Failed to send request');\n    }\n  }\n};\nexport const getTranscriptionHistory = async (limit = 50) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/history`, {\n      params: {\n        limit\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch history');\n  }\n};\nexport const getTranscriptionById = async id => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/transcription/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch transcription');\n  }\n};\nexport const deleteTranscription = async id => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/transcription/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to delete transcription');\n  }\n};\nexport const getStatistics = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/stats`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch statistics');\n  }\n};\nexport const checkHealth = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/health`);\n    return response.data;\n  } catch (error) {\n    return {\n      status: 'unhealthy',\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","transcribeAudio","formData","response","post","headers","timeout","data","error","Error","detail","request","getTranscriptionHistory","limit","get","params","getTranscriptionById","id","deleteTranscription","delete","getStatistics","checkHealth","status","message"],"sources":["/Users/rla/Projects/Speecher/src/react-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport const transcribeAudio = async (formData) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/transcribe`,\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 60000 // 60 second timeout\n      }\n    );\n    \n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.detail || 'Server error');\n    } else if (error.request) {\n      throw new Error('No response from server. Please check if the backend is running.');\n    } else {\n      throw new Error('Failed to send request');\n    }\n  }\n};\n\nexport const getTranscriptionHistory = async (limit = 50) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/history`, {\n      params: { limit }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch history');\n  }\n};\n\nexport const getTranscriptionById = async (id) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/transcription/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch transcription');\n  }\n};\n\nexport const deleteTranscription = async (id) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/transcription/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to delete transcription');\n  }\n};\n\nexport const getStatistics = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/stats`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch statistics');\n  }\n};\n\nexport const checkHealth = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/health`);\n    return response.data;\n  } catch (error) {\n    return { status: 'unhealthy', error: error.message };\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC/B,GAAGP,YAAY,aAAa,EAC5BK,QAAQ,EACR;MACEG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,OAAO,EAAE,KAAK,CAAC;IACjB,CACF,CAAC;IAED,OAAOH,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACL,QAAQ,EAAE;MAClB,MAAM,IAAIM,KAAK,CAACD,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACG,MAAM,IAAI,cAAc,CAAC;IAC/D,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;MACxB,MAAM,IAAIF,KAAK,CAAC,kEAAkE,CAAC;IACrF,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAAC,wBAAwB,CAAC;IAC3C;EACF;AACF,CAAC;AAED,OAAO,MAAMG,uBAAuB,GAAG,MAAAA,CAAOC,KAAK,GAAG,EAAE,KAAK;EAC3D,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,UAAU,EAAE;MAC1DkB,MAAM,EAAE;QAAEF;MAAM;IAClB,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AACF,CAAC;AAED,OAAO,MAAMO,oBAAoB,GAAG,MAAOC,EAAE,IAAK;EAChD,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,kBAAkBoB,EAAE,EAAE,CAAC;IACvE,OAAOd,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMS,mBAAmB,GAAG,MAAOD,EAAE,IAAK;EAC/C,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMP,KAAK,CAACuB,MAAM,CAAC,GAAGtB,YAAY,kBAAkBoB,EAAE,EAAE,CAAC;IAC1E,OAAOd,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;EACnD;AACF,CAAC;AAED,OAAO,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,QAAQ,CAAC;IACzD,OAAOM,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,YAAY,SAAS,CAAC;IAC1D,OAAOM,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEc,MAAM,EAAE,WAAW;MAAEd,KAAK,EAAEA,KAAK,CAACe;IAAQ,CAAC;EACtD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}