{"ast":null,"code":"var _jsxFileName = \"/Users/rla/Projects/Speecher/src/react-frontend/src/components/Settings.js\";\nimport React from 'react';\nimport { X } from 'lucide-react';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  settings,\n  onSettingsChange,\n  onClose\n}) => {\n  const languages = [{\n    code: 'en-US',\n    name: 'English (US)'\n  }, {\n    code: 'pl-PL',\n    name: 'Polish'\n  }, {\n    code: 'de-DE',\n    name: 'German'\n  }, {\n    code: 'es-ES',\n    name: 'Spanish'\n  }, {\n    code: 'fr-FR',\n    name: 'French'\n  }, {\n    code: 'it-IT',\n    name: 'Italian'\n  }, {\n    code: 'pt-PT',\n    name: 'Portuguese'\n  }, {\n    code: 'nl-NL',\n    name: 'Dutch'\n  }, {\n    code: 'ru-RU',\n    name: 'Russian'\n  }, {\n    code: 'zh-CN',\n    name: 'Chinese'\n  }, {\n    code: 'ja-JP',\n    name: 'Japanese'\n  }];\n  const providers = [{\n    value: 'aws',\n    name: 'Amazon Transcribe'\n  }, {\n    value: 'azure',\n    name: 'Azure Speech'\n  }, {\n    value: 'gcp',\n    name: 'Google Speech'\n  }];\n  const handleChange = (field, value) => {\n    onSettingsChange({\n      ...settings,\n      [field]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(X, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"provider\",\n          children: \"Cloud Provider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"provider\",\n          value: settings.provider,\n          onChange: e => handleChange('provider', e.target.value),\n          children: providers.map(provider => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: provider.value,\n            children: provider.name\n          }, provider.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language\",\n          children: \"Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language\",\n          value: settings.language,\n          onChange: e => handleChange('language', e.target.value),\n          children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang.code,\n            children: lang.name\n          }, lang.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: settings.enableDiarization,\n            onChange: e => handleChange('enableDiarization', e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Enable Speaker Diarization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"setting-description\",\n          children: \"Identify different speakers in the audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), settings.enableDiarization && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"maxSpeakers\",\n          children: \"Max Speakers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          id: \"maxSpeakers\",\n          min: \"2\",\n          max: \"10\",\n          value: settings.maxSpeakers,\n          onChange: e => handleChange('maxSpeakers', parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"range-value\",\n          children: settings.maxSpeakers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","X","jsxDEV","_jsxDEV","Settings","settings","onSettingsChange","onClose","languages","code","name","providers","value","handleChange","field","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","htmlFor","id","provider","onChange","e","target","map","language","lang","type","checked","enableDiarization","min","max","maxSpeakers","parseInt","_c","$RefreshReg$"],"sources":["/Users/rla/Projects/Speecher/src/react-frontend/src/components/Settings.js"],"sourcesContent":["import React from 'react';\nimport { X } from 'lucide-react';\nimport './Settings.css';\n\nconst Settings = ({ settings, onSettingsChange, onClose }) => {\n  const languages = [\n    { code: 'en-US', name: 'English (US)' },\n    { code: 'pl-PL', name: 'Polish' },\n    { code: 'de-DE', name: 'German' },\n    { code: 'es-ES', name: 'Spanish' },\n    { code: 'fr-FR', name: 'French' },\n    { code: 'it-IT', name: 'Italian' },\n    { code: 'pt-PT', name: 'Portuguese' },\n    { code: 'nl-NL', name: 'Dutch' },\n    { code: 'ru-RU', name: 'Russian' },\n    { code: 'zh-CN', name: 'Chinese' },\n    { code: 'ja-JP', name: 'Japanese' }\n  ];\n\n  const providers = [\n    { value: 'aws', name: 'Amazon Transcribe' },\n    { value: 'azure', name: 'Azure Speech' },\n    { value: 'gcp', name: 'Google Speech' }\n  ];\n\n  const handleChange = (field, value) => {\n    onSettingsChange({\n      ...settings,\n      [field]: value\n    });\n  };\n\n  return (\n    <div className=\"settings-panel\">\n      <div className=\"settings-header\">\n        <h3>Settings</h3>\n        <button className=\"close-btn\" onClick={onClose}>\n          <X size={20} />\n        </button>\n      </div>\n      \n      <div className=\"settings-content\">\n        <div className=\"setting-group\">\n          <label htmlFor=\"provider\">Cloud Provider</label>\n          <select\n            id=\"provider\"\n            value={settings.provider}\n            onChange={(e) => handleChange('provider', e.target.value)}\n          >\n            {providers.map(provider => (\n              <option key={provider.value} value={provider.value}>\n                {provider.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"setting-group\">\n          <label htmlFor=\"language\">Language</label>\n          <select\n            id=\"language\"\n            value={settings.language}\n            onChange={(e) => handleChange('language', e.target.value)}\n          >\n            {languages.map(lang => (\n              <option key={lang.code} value={lang.code}>\n                {lang.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"setting-group\">\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              checked={settings.enableDiarization}\n              onChange={(e) => handleChange('enableDiarization', e.target.checked)}\n            />\n            <span>Enable Speaker Diarization</span>\n          </label>\n          <p className=\"setting-description\">\n            Identify different speakers in the audio\n          </p>\n        </div>\n\n        {settings.enableDiarization && (\n          <div className=\"setting-group\">\n            <label htmlFor=\"maxSpeakers\">Max Speakers</label>\n            <input\n              type=\"range\"\n              id=\"maxSpeakers\"\n              min=\"2\"\n              max=\"10\"\n              value={settings.maxSpeakers}\n              onChange={(e) => handleChange('maxSpeakers', parseInt(e.target.value))}\n            />\n            <span className=\"range-value\">{settings.maxSpeakers}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}