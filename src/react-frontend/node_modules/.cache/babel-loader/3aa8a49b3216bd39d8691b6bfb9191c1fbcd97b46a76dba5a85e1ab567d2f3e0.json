{"ast":null,"code":"var _jsxFileName = \"/Users/rla/Projects/Speecher/src/react-frontend/src/components/AudioVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioVisualizer = ({\n  stream,\n  isRecording\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationRef = useRef(null);\n  const [audioLevel, setAudioLevel] = useState(0);\n  useEffect(() => {\n    if (stream && isRecording) {\n      setupAudioAnalysis();\n    } else {\n      cleanup();\n    }\n    return cleanup;\n  }, [stream, isRecording]);\n  const setupAudioAnalysis = () => {\n    try {\n      // Create audio context\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      audioContextRef.current = new AudioContext();\n\n      // Create analyser node\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 256;\n      analyserRef.current.smoothingTimeConstant = 0.8;\n\n      // Connect stream to analyser\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n\n      // Start visualization\n      visualize();\n    } catch (error) {\n      console.error('Error setting up audio analysis:', error);\n    }\n  };\n  const cleanup = () => {\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n    }\n  };\n  const visualize = () => {\n    if (!analyserRef.current || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext('2d');\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      // Calculate average audio level\n      const average = dataArray.reduce((a, b) => a + b, 0) / bufferLength;\n      setAudioLevel(Math.min(100, average / 255 * 150)); // Scale to 0-100\n\n      // Clear canvas\n      canvasCtx.fillStyle = 'rgb(245, 245, 245)';\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Draw frequency bars\n      const barWidth = canvas.width / bufferLength * 2.5;\n      let barHeight;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = dataArray[i] / 255 * canvas.height * 0.8;\n\n        // Create gradient effect\n        const gradient = canvasCtx.createLinearGradient(0, canvas.height - barHeight, 0, canvas.height);\n        gradient.addColorStop(0, '#667eea');\n        gradient.addColorStop(0.5, '#764ba2');\n        gradient.addColorStop(1, '#667eea');\n        canvasCtx.fillStyle = gradient;\n        canvasCtx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n        x += barWidth + 1;\n      }\n    };\n    draw();\n  };\n  const getAudioLevelColor = () => {\n    if (audioLevel < 20) return '#4caf50';\n    if (audioLevel < 50) return '#2196f3';\n    if (audioLevel < 80) return '#ff9800';\n    return '#f44336';\n  };\n  const getAudioLevelText = () => {\n    if (audioLevel < 10) return 'Silent';\n    if (audioLevel < 30) return 'Quiet';\n    if (audioLevel < 60) return 'Good';\n    if (audioLevel < 85) return 'Loud';\n    return 'Too Loud';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        p: 2,\n        backgroundColor: '#f5f5f5',\n        borderRadius: 2,\n        position: 'relative',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 800,\n        height: 150,\n        style: {\n          width: '100%',\n          height: '150px',\n          borderRadius: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 10,\n          right: 10,\n          backgroundColor: 'rgba(255, 255, 255, 0.95)',\n          borderRadius: 2,\n          p: 1.5,\n          minWidth: 120,\n          boxShadow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: \"Audio Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            mt: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 12,\n              height: 12,\n              borderRadius: '50%',\n              backgroundColor: getAudioLevelColor(),\n              animation: isRecording ? 'pulse 1s infinite' : 'none',\n              '@keyframes pulse': {\n                '0%': {\n                  opacity: 1\n                },\n                '50%': {\n                  opacity: 0.5\n                },\n                '100%': {\n                  opacity: 1\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            fontWeight: \"bold\",\n            color: getAudioLevelColor(),\n            children: getAudioLevelText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1,\n            height: 4,\n            backgroundColor: '#e0e0e0',\n            borderRadius: 2,\n            overflow: 'hidden'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '100%',\n              width: `${audioLevel}%`,\n              backgroundColor: getAudioLevelColor(),\n              transition: 'width 0.1s ease, background-color 0.3s ease',\n              borderRadius: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        display: 'flex',\n        gap: 0.5,\n        height: 40,\n        alignItems: 'flex-end'\n      },\n      children: Array.from({\n        length: 20\n      }).map((_, i) => {\n        const threshold = (i + 1) * 5;\n        const isActive = audioLevel >= threshold;\n        let barColor = '#e0e0e0';\n        if (isActive) {\n          if (threshold <= 40) barColor = '#4caf50';else if (threshold <= 70) barColor = '#ff9800';else barColor = '#f44336';\n        }\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1,\n            height: `${20 + i * 1.5}px`,\n            backgroundColor: barColor,\n            borderRadius: 0.5,\n            transition: 'background-color 0.1s ease',\n            opacity: isActive ? 1 : 0.3\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: audioLevel < 10 ? \"ðŸ“¢ Please speak louder or move closer to the microphone\" : audioLevel > 85 ? \"ðŸ”‡ You're too loud! Please speak softer or move away from the microphone\" : \"âœ… Perfect audio level - keep speaking clearly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioVisualizer, \"IMrk1KA29ztEoz91viS+eoNnqu4=\");\n_c = AudioVisualizer;\nexport default AudioVisualizer;\nvar _c;\n$RefreshReg$(_c, \"AudioVisualizer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Paper","Typography","jsxDEV","_jsxDEV","AudioVisualizer","stream","isRecording","_s","canvasRef","audioContextRef","analyserRef","animationRef","audioLevel","setAudioLevel","setupAudioAnalysis","cleanup","AudioContext","window","webkitAudioContext","current","createAnalyser","fftSize","smoothingTimeConstant","source","createMediaStreamSource","connect","visualize","error","console","cancelAnimationFrame","close","canvas","canvasCtx","getContext","bufferLength","frequencyBinCount","dataArray","Uint8Array","draw","requestAnimationFrame","getByteFrequencyData","average","reduce","a","b","Math","min","fillStyle","fillRect","width","height","barWidth","barHeight","x","i","gradient","createLinearGradient","addColorStop","getAudioLevelColor","getAudioLevelText","sx","mt","children","elevation","p","backgroundColor","borderRadius","position","overflow","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","top","right","minWidth","boxShadow","variant","color","display","alignItems","gap","animation","opacity","fontWeight","transition","Array","from","length","map","_","threshold","isActive","barColor","flex","textAlign","_c","$RefreshReg$"],"sources":["/Users/rla/Projects/Speecher/src/react-frontend/src/components/AudioVisualizer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\n\nconst AudioVisualizer = ({ stream, isRecording }) => {\n  const canvasRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationRef = useRef(null);\n  const [audioLevel, setAudioLevel] = useState(0);\n\n  useEffect(() => {\n    if (stream && isRecording) {\n      setupAudioAnalysis();\n    } else {\n      cleanup();\n    }\n\n    return cleanup;\n  }, [stream, isRecording]);\n\n  const setupAudioAnalysis = () => {\n    try {\n      // Create audio context\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      audioContextRef.current = new AudioContext();\n      \n      // Create analyser node\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 256;\n      analyserRef.current.smoothingTimeConstant = 0.8;\n      \n      // Connect stream to analyser\n      const source = audioContextRef.current.createMediaStreamSource(stream);\n      source.connect(analyserRef.current);\n      \n      // Start visualization\n      visualize();\n    } catch (error) {\n      console.error('Error setting up audio analysis:', error);\n    }\n  };\n\n  const cleanup = () => {\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n    }\n  };\n\n  const visualize = () => {\n    if (!analyserRef.current || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext('2d');\n    const bufferLength = analyserRef.current.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n      \n      analyserRef.current.getByteFrequencyData(dataArray);\n      \n      // Calculate average audio level\n      const average = dataArray.reduce((a, b) => a + b, 0) / bufferLength;\n      setAudioLevel(Math.min(100, (average / 255) * 150)); // Scale to 0-100\n      \n      // Clear canvas\n      canvasCtx.fillStyle = 'rgb(245, 245, 245)';\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      // Draw frequency bars\n      const barWidth = (canvas.width / bufferLength) * 2.5;\n      let barHeight;\n      let x = 0;\n      \n      for (let i = 0; i < bufferLength; i++) {\n        barHeight = (dataArray[i] / 255) * canvas.height * 0.8;\n        \n        // Create gradient effect\n        const gradient = canvasCtx.createLinearGradient(0, canvas.height - barHeight, 0, canvas.height);\n        gradient.addColorStop(0, '#667eea');\n        gradient.addColorStop(0.5, '#764ba2');\n        gradient.addColorStop(1, '#667eea');\n        \n        canvasCtx.fillStyle = gradient;\n        canvasCtx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n        \n        x += barWidth + 1;\n      }\n    };\n\n    draw();\n  };\n\n  const getAudioLevelColor = () => {\n    if (audioLevel < 20) return '#4caf50';\n    if (audioLevel < 50) return '#2196f3';\n    if (audioLevel < 80) return '#ff9800';\n    return '#f44336';\n  };\n\n  const getAudioLevelText = () => {\n    if (audioLevel < 10) return 'Silent';\n    if (audioLevel < 30) return 'Quiet';\n    if (audioLevel < 60) return 'Good';\n    if (audioLevel < 85) return 'Loud';\n    return 'Too Loud';\n  };\n\n  return (\n    <Box sx={{ width: '100%', mt: 2 }}>\n      {/* Waveform Canvas */}\n      <Paper \n        elevation={0} \n        sx={{ \n          p: 2, \n          backgroundColor: '#f5f5f5',\n          borderRadius: 2,\n          position: 'relative',\n          overflow: 'hidden'\n        }}\n      >\n        <canvas\n          ref={canvasRef}\n          width={800}\n          height={150}\n          style={{\n            width: '100%',\n            height: '150px',\n            borderRadius: '8px'\n          }}\n        />\n        \n        {/* Audio Level Indicator */}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 10,\n            right: 10,\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            borderRadius: 2,\n            p: 1.5,\n            minWidth: 120,\n            boxShadow: 1\n          }}\n        >\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Audio Level\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 0.5 }}>\n            <Box\n              sx={{\n                width: 12,\n                height: 12,\n                borderRadius: '50%',\n                backgroundColor: getAudioLevelColor(),\n                animation: isRecording ? 'pulse 1s infinite' : 'none',\n                '@keyframes pulse': {\n                  '0%': { opacity: 1 },\n                  '50%': { opacity: 0.5 },\n                  '100%': { opacity: 1 }\n                }\n              }}\n            />\n            <Typography variant=\"body2\" fontWeight=\"bold\" color={getAudioLevelColor()}>\n              {getAudioLevelText()}\n            </Typography>\n          </Box>\n          <Box\n            sx={{\n              mt: 1,\n              height: 4,\n              backgroundColor: '#e0e0e0',\n              borderRadius: 2,\n              overflow: 'hidden'\n            }}\n          >\n            <Box\n              sx={{\n                height: '100%',\n                width: `${audioLevel}%`,\n                backgroundColor: getAudioLevelColor(),\n                transition: 'width 0.1s ease, background-color 0.3s ease',\n                borderRadius: 2\n              }}\n            />\n          </Box>\n        </Box>\n      </Paper>\n\n      {/* Volume Meter Bars */}\n      <Box sx={{ mt: 2, display: 'flex', gap: 0.5, height: 40, alignItems: 'flex-end' }}>\n        {Array.from({ length: 20 }).map((_, i) => {\n          const threshold = (i + 1) * 5;\n          const isActive = audioLevel >= threshold;\n          let barColor = '#e0e0e0';\n          \n          if (isActive) {\n            if (threshold <= 40) barColor = '#4caf50';\n            else if (threshold <= 70) barColor = '#ff9800';\n            else barColor = '#f44336';\n          }\n          \n          return (\n            <Box\n              key={i}\n              sx={{\n                flex: 1,\n                height: `${20 + (i * 1.5)}px`,\n                backgroundColor: barColor,\n                borderRadius: 0.5,\n                transition: 'background-color 0.1s ease',\n                opacity: isActive ? 1 : 0.3\n              }}\n            />\n          );\n        })}\n      </Box>\n\n      {/* Instructions */}\n      {isRecording && (\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {audioLevel < 10 \n              ? \"ðŸ“¢ Please speak louder or move closer to the microphone\"\n              : audioLevel > 85 \n              ? \"ðŸ”‡ You're too loud! Please speak softer or move away from the microphone\"\n              : \"âœ… Perfect audio level - keep speaking clearly\"}\n          </Typography>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default AudioVisualizer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,GAAG,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMY,eAAe,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMa,WAAW,GAAGb,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMc,YAAY,GAAGd,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE/CF,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,IAAIC,WAAW,EAAE;MACzBQ,kBAAkB,CAAC,CAAC;IACtB,CAAC,MAAM;MACLC,OAAO,CAAC,CAAC;IACX;IAEA,OAAOA,OAAO;EAChB,CAAC,EAAE,CAACV,MAAM,EAAEC,WAAW,CAAC,CAAC;EAEzB,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI;MACF;MACA,MAAME,YAAY,GAAGC,MAAM,CAACD,YAAY,IAAIC,MAAM,CAACC,kBAAkB;MACrET,eAAe,CAACU,OAAO,GAAG,IAAIH,YAAY,CAAC,CAAC;;MAE5C;MACAN,WAAW,CAACS,OAAO,GAAGV,eAAe,CAACU,OAAO,CAACC,cAAc,CAAC,CAAC;MAC9DV,WAAW,CAACS,OAAO,CAACE,OAAO,GAAG,GAAG;MACjCX,WAAW,CAACS,OAAO,CAACG,qBAAqB,GAAG,GAAG;;MAE/C;MACA,MAAMC,MAAM,GAAGd,eAAe,CAACU,OAAO,CAACK,uBAAuB,CAACnB,MAAM,CAAC;MACtEkB,MAAM,CAACE,OAAO,CAACf,WAAW,CAACS,OAAO,CAAC;;MAEnC;MACAO,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,MAAMZ,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIJ,YAAY,CAACQ,OAAO,EAAE;MACxBU,oBAAoB,CAAClB,YAAY,CAACQ,OAAO,CAAC;IAC5C;IACA,IAAIV,eAAe,CAACU,OAAO,EAAE;MAC3BV,eAAe,CAACU,OAAO,CAACW,KAAK,CAAC,CAAC;IACjC;EACF,CAAC;EAED,MAAMJ,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI,CAAChB,WAAW,CAACS,OAAO,IAAI,CAACX,SAAS,CAACW,OAAO,EAAE;IAEhD,MAAMY,MAAM,GAAGvB,SAAS,CAACW,OAAO;IAChC,MAAMa,SAAS,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACzC,MAAMC,YAAY,GAAGxB,WAAW,CAACS,OAAO,CAACgB,iBAAiB;IAC1D,MAAMC,SAAS,GAAG,IAAIC,UAAU,CAACH,YAAY,CAAC;IAE9C,MAAMI,IAAI,GAAGA,CAAA,KAAM;MACjB3B,YAAY,CAACQ,OAAO,GAAGoB,qBAAqB,CAACD,IAAI,CAAC;MAElD5B,WAAW,CAACS,OAAO,CAACqB,oBAAoB,CAACJ,SAAS,CAAC;;MAEnD;MACA,MAAMK,OAAO,GAAGL,SAAS,CAACM,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC,GAAGV,YAAY;MACnErB,aAAa,CAACgC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAGL,OAAO,GAAG,GAAG,GAAI,GAAG,CAAC,CAAC,CAAC,CAAC;;MAErD;MACAT,SAAS,CAACe,SAAS,GAAG,oBAAoB;MAC1Cf,SAAS,CAACgB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEjB,MAAM,CAACkB,KAAK,EAAElB,MAAM,CAACmB,MAAM,CAAC;;MAErD;MACA,MAAMC,QAAQ,GAAIpB,MAAM,CAACkB,KAAK,GAAGf,YAAY,GAAI,GAAG;MACpD,IAAIkB,SAAS;MACb,IAAIC,CAAC,GAAG,CAAC;MAET,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,YAAY,EAAEoB,CAAC,EAAE,EAAE;QACrCF,SAAS,GAAIhB,SAAS,CAACkB,CAAC,CAAC,GAAG,GAAG,GAAIvB,MAAM,CAACmB,MAAM,GAAG,GAAG;;QAEtD;QACA,MAAMK,QAAQ,GAAGvB,SAAS,CAACwB,oBAAoB,CAAC,CAAC,EAAEzB,MAAM,CAACmB,MAAM,GAAGE,SAAS,EAAE,CAAC,EAAErB,MAAM,CAACmB,MAAM,CAAC;QAC/FK,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC;QACnCF,QAAQ,CAACE,YAAY,CAAC,GAAG,EAAE,SAAS,CAAC;QACrCF,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC;QAEnCzB,SAAS,CAACe,SAAS,GAAGQ,QAAQ;QAC9BvB,SAAS,CAACgB,QAAQ,CAACK,CAAC,EAAEtB,MAAM,CAACmB,MAAM,GAAGE,SAAS,EAAED,QAAQ,EAAEC,SAAS,CAAC;QAErEC,CAAC,IAAIF,QAAQ,GAAG,CAAC;MACnB;IACF,CAAC;IAEDb,IAAI,CAAC,CAAC;EACR,CAAC;EAED,MAAMoB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI9C,UAAU,GAAG,EAAE,EAAE,OAAO,SAAS;IACrC,IAAIA,UAAU,GAAG,EAAE,EAAE,OAAO,SAAS;IACrC,IAAIA,UAAU,GAAG,EAAE,EAAE,OAAO,SAAS;IACrC,OAAO,SAAS;EAClB,CAAC;EAED,MAAM+C,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI/C,UAAU,GAAG,EAAE,EAAE,OAAO,QAAQ;IACpC,IAAIA,UAAU,GAAG,EAAE,EAAE,OAAO,OAAO;IACnC,IAAIA,UAAU,GAAG,EAAE,EAAE,OAAO,MAAM;IAClC,IAAIA,UAAU,GAAG,EAAE,EAAE,OAAO,MAAM;IAClC,OAAO,UAAU;EACnB,CAAC;EAED,oBACET,OAAA,CAACJ,GAAG;IAAC6D,EAAE,EAAE;MAAEX,KAAK,EAAE,MAAM;MAAEY,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAEhC3D,OAAA,CAACH,KAAK;MACJ+D,SAAS,EAAE,CAAE;MACbH,EAAE,EAAE;QACFI,CAAC,EAAE,CAAC;QACJC,eAAe,EAAE,SAAS;QAC1BC,YAAY,EAAE,CAAC;QACfC,QAAQ,EAAE,UAAU;QACpBC,QAAQ,EAAE;MACZ,CAAE;MAAAN,QAAA,gBAEF3D,OAAA;QACEkE,GAAG,EAAE7D,SAAU;QACfyC,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZoB,KAAK,EAAE;UACLrB,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,OAAO;UACfgB,YAAY,EAAE;QAChB;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGFvE,OAAA,CAACJ,GAAG;QACF6D,EAAE,EAAE;UACFO,QAAQ,EAAE,UAAU;UACpBQ,GAAG,EAAE,EAAE;UACPC,KAAK,EAAE,EAAE;UACTX,eAAe,EAAE,2BAA2B;UAC5CC,YAAY,EAAE,CAAC;UACfF,CAAC,EAAE,GAAG;UACNa,QAAQ,EAAE,GAAG;UACbC,SAAS,EAAE;QACb,CAAE;QAAAhB,QAAA,gBAEF3D,OAAA,CAACF,UAAU;UAAC8E,OAAO,EAAC,SAAS;UAACC,KAAK,EAAC,gBAAgB;UAAAlB,QAAA,EAAC;QAErD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbvE,OAAA,CAACJ,GAAG;UAAC6D,EAAE,EAAE;YAAEqB,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE,QAAQ;YAAEC,GAAG,EAAE,CAAC;YAAEtB,EAAE,EAAE;UAAI,CAAE;UAAAC,QAAA,gBAClE3D,OAAA,CAACJ,GAAG;YACF6D,EAAE,EAAE;cACFX,KAAK,EAAE,EAAE;cACTC,MAAM,EAAE,EAAE;cACVgB,YAAY,EAAE,KAAK;cACnBD,eAAe,EAAEP,kBAAkB,CAAC,CAAC;cACrC0B,SAAS,EAAE9E,WAAW,GAAG,mBAAmB,GAAG,MAAM;cACrD,kBAAkB,EAAE;gBAClB,IAAI,EAAE;kBAAE+E,OAAO,EAAE;gBAAE,CAAC;gBACpB,KAAK,EAAE;kBAAEA,OAAO,EAAE;gBAAI,CAAC;gBACvB,MAAM,EAAE;kBAAEA,OAAO,EAAE;gBAAE;cACvB;YACF;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACFvE,OAAA,CAACF,UAAU;YAAC8E,OAAO,EAAC,OAAO;YAACO,UAAU,EAAC,MAAM;YAACN,KAAK,EAAEtB,kBAAkB,CAAC,CAAE;YAAAI,QAAA,EACvEH,iBAAiB,CAAC;UAAC;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACNvE,OAAA,CAACJ,GAAG;UACF6D,EAAE,EAAE;YACFC,EAAE,EAAE,CAAC;YACLX,MAAM,EAAE,CAAC;YACTe,eAAe,EAAE,SAAS;YAC1BC,YAAY,EAAE,CAAC;YACfE,QAAQ,EAAE;UACZ,CAAE;UAAAN,QAAA,eAEF3D,OAAA,CAACJ,GAAG;YACF6D,EAAE,EAAE;cACFV,MAAM,EAAE,MAAM;cACdD,KAAK,EAAE,GAAGrC,UAAU,GAAG;cACvBqD,eAAe,EAAEP,kBAAkB,CAAC,CAAC;cACrC6B,UAAU,EAAE,6CAA6C;cACzDrB,YAAY,EAAE;YAChB;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGRvE,OAAA,CAACJ,GAAG;MAAC6D,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEoB,OAAO,EAAE,MAAM;QAAEE,GAAG,EAAE,GAAG;QAAEjC,MAAM,EAAE,EAAE;QAAEgC,UAAU,EAAE;MAAW,CAAE;MAAApB,QAAA,EAC/E0B,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEtC,CAAC,KAAK;QACxC,MAAMuC,SAAS,GAAG,CAACvC,CAAC,GAAG,CAAC,IAAI,CAAC;QAC7B,MAAMwC,QAAQ,GAAGlF,UAAU,IAAIiF,SAAS;QACxC,IAAIE,QAAQ,GAAG,SAAS;QAExB,IAAID,QAAQ,EAAE;UACZ,IAAID,SAAS,IAAI,EAAE,EAAEE,QAAQ,GAAG,SAAS,CAAC,KACrC,IAAIF,SAAS,IAAI,EAAE,EAAEE,QAAQ,GAAG,SAAS,CAAC,KAC1CA,QAAQ,GAAG,SAAS;QAC3B;QAEA,oBACE5F,OAAA,CAACJ,GAAG;UAEF6D,EAAE,EAAE;YACFoC,IAAI,EAAE,CAAC;YACP9C,MAAM,EAAE,GAAG,EAAE,GAAII,CAAC,GAAG,GAAI,IAAI;YAC7BW,eAAe,EAAE8B,QAAQ;YACzB7B,YAAY,EAAE,GAAG;YACjBqB,UAAU,EAAE,4BAA4B;YACxCF,OAAO,EAAES,QAAQ,GAAG,CAAC,GAAG;UAC1B;QAAE,GARGxC,CAAC;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASP,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLpE,WAAW,iBACVH,OAAA,CAACJ,GAAG;MAAC6D,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEoC,SAAS,EAAE;MAAS,CAAE;MAAAnC,QAAA,eACtC3D,OAAA,CAACF,UAAU;QAAC8E,OAAO,EAAC,OAAO;QAACC,KAAK,EAAC,gBAAgB;QAAAlB,QAAA,EAC/ClD,UAAU,GAAG,EAAE,GACZ,yDAAyD,GACzDA,UAAU,GAAG,EAAE,GACf,0EAA0E,GAC1E;MAA+C;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnE,EAAA,CAxOIH,eAAe;AAAA8F,EAAA,GAAf9F,eAAe;AA0OrB,eAAeA,eAAe;AAAC,IAAA8F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}